apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    com.datadoghq.ad.logs: '[{"source": "mysql", "service": "product-mysql"}]'
    kompose.cmd: kompose convert
    kompose.version: 1.24.0 (7c629530)
  creationTimestamp: null
  labels:
    io.kompose.service: product-db
  name: product-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: product-db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        com.datadoghq.ad.logs: '[{"source": "mysql", "service": "product-mysql"}]'
        kompose.cmd: kompose convert
        kompose.version: 1.24.0 (7c629530)
      creationTimestamp: null
      labels:
        io.kompose.network/micro_network: "true"
        io.kompose.service: product-db
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: product
            - name: MYSQL_PASSWORD
              value: pfm_2020
            - name: MYSQL_ROOT_PASSWORD
              value: pfm_dc_2020
            - name: MYSQL_USER
              value: cloudacademy
          image: mysql:8
          name: cproduct-dbase
          ports:
            - containerPort: 3306
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: productdb-vol
      restartPolicy: Always
      volumes:
        - name: productdb-vol
          persistentVolumeClaim:
            claimName: productdb-vol
status: {}
